plugins {
	id 'java' // Needed for assemble and build
	//id 'maven' // When is this needed?
	id 'maven-publish' // Provides publishing and publishToMavenLocal
	id 'com.enonic.defaults' version '2.1.2' // Publishing
	id 'com.enonic.xp.app' version '3.4.0'

	//id 'com.moowork.node' version '1.3.1'
	id 'com.github.node-gradle.node' version '7.0.1'
}


repositories {
	xp.enonicRepo()
	mavenCentral()
	//mavenLocal() // Local maven repo may contain outdated packages
}


app {
	name = project.appName
	group = 'com.enonic.app'
	displayName = 'FotoWare'
	vendorName = 'Enonic AS'
	vendorUrl = 'http://enonic.com'
	systemVersion = "${xpVersion}"
	//systemApp = true
}


dependencies {
	implementation "com.enonic.xp:core-api:${xpVersion}"
	implementation "com.enonic.xp:portal-api:${xpVersion}"

	include "com.enonic.xp:lib-admin:${xpVersion}"
	include "com.enonic.xp:lib-auth:${xpVersion}"
	//include "com.enonic.xp:lib-cluster:${xpVersion}"
	include "com.enonic.xp:lib-common:${xpVersion}"
	include "com.enonic.xp:lib-content:${xpVersion}"
	include "com.enonic.xp:lib-context:${xpVersion}"
	include "com.enonic.xp:lib-event:${xpVersion}"
	//include "com.enonic.xp:lib-i18n:${xpVersion}"
	include "com.enonic.xp:lib-io:${xpVersion}"
	//include "com.enonic.xp:lib-mail:${xpVersion}"
	//include "com.enonic.xp:lib-mustache:${xpVersion}"
	include "com.enonic.xp:lib-node:${xpVersion}"
	include "com.enonic.xp:lib-portal:${xpVersion}"
	include "com.enonic.xp:lib-repo:${xpVersion}"
	include "com.enonic.xp:lib-scheduler:${xpVersion}"
	include "com.enonic.xp:lib-task:${xpVersion}"
	//include "com.enonic.xp:lib-thymeleaf:${xpVersion}"
	//include "com.enonic.xp:lib-websocket:${xpVersion}"
	//include "com.enonic.xp:lib-xslt:${xpVersion}"

	include "com.enonic.lib:lib-admin-ui:4.3.4"
	//include 'com.enonic.lib:lib-cache:2.1.1'
	//include 'com.enonic.lib:lib-cron:1.1.1'
	include 'com.enonic.lib:lib-galimatias:1.0.0-B1'
	//include 'com.enonic.lib:lib-guillotine:1.0.1'

	//include 'com.enonic.lib:lib-http-client:2.1.2'
	include 'com.enonic.lib:lib-http-client:3.2.2' // Potensial URL encoding issues

	include 'com.enonic.lib:lib-license:3.1.0'
	include 'com.enonic.lib:lib-router:3.1.0'
	//include 'com.enonic.lib:menu:1.3.3'
	include "com.enonic.lib:lib-static:1.0.3"
	include 'com.enonic.lib:lib-text-encoding:2.1.1'
	//include 'com.enonic.lib:lib-util:2.2.1'

	// WARNING: If you use include files, jar file will be missing dependencies, you have to add them manually!
	//include files('../lib-static/build/libs/lib-static-0.0.3-SNAPSHOT.jar')
}


tasks.withType(Copy) {
  includeEmptyDirs = false
}


//──────────────────────────────────────────────────────────────────────────────
// Gradle node plugin
//──────────────────────────────────────────────────────────────────────────────
node {
	download = true
	version = "${nodeVersion}"
}

task npmTest(type: NpmTask) {
	args = [
		'run',
		'test'
	]
	dependsOn yarn_install
	environment = [
		'FORCE_COLOR': 'true',
	]
}

test.dependsOn npmTest

task npmBuild(type: NpmTask) {
	args = [
		'run',
		'--silent',
		'build'
	]
	dependsOn yarn_install
	environment = [
		'FORCE_COLOR': 'true',
		'LOG_LEVEL_FROM_GRADLE': gradle.startParameter.logLevel.toString(),
		'NODE_ENV': project.hasProperty('dev') || project.hasProperty('development') ? 'development' : 'production'
	]
	// inputs.dir 'node_modules/react'
	// inputs.dir 'node_modules/react-dom'
	inputs.dir 'src/main/resources'
	outputs.dir 'build/resources/main'
}

jar.dependsOn npmBuild

//──────────────────────────────────────────────────────────────────────────────
// Webpack
//──────────────────────────────────────────────────────────────────────────────
sourceSets {
	main {
		java {
			srcDir 'src/main/java'
		}
		resources { // Paths relative to src/main/resources
			//exclude 'assets/**/*.svg'
		}
	}
}


// task webpack(type:NodeTask) {
// 	dependsOn yarn_install
// 	mustRunAfter yarn_install
// 	script = file('node_modules/webpack-cli/bin/cli.js')
// 	args = [
// 		'--color'
// 	]
// 	outputs.dir './build/resources/main' // processResources will delete the directory if this is not present
// }

// jar.dependsOn webpack

// task watch(type:NodeTask) {
// 	script = file('node_modules/webpack-cli/bin/cli.js')
// 	args = [
// 		'--color',
// 		'--watch'
// 	]
// }

/*task asciidoc(type: NodeTask) {
  dependsOn yarn_install
  script file('asciidoc2html.mjs')
}*/

processResources {
	//dependsOn asciidoc
	//mustRunAfter asciidoc

	exclude '**/.gitkeep'

	// Let gradle copy these
	//include '**/*.mjs'
	//include '**/*.svg'
	//include '**/*.xml'

	// Let webpack handle these (rather than gradle)
	//exclude '**/*.css' // We need google fonts
	exclude '**/*.es'
	exclude '**/*.js'
	exclude '**/*.jsx'
	exclude '**/*.less'
	exclude '**/*.sass'
	exclude '**/*.scss'
	exclude '**/*.styl'
	exclude '**/*.ts'
}


/*publishing {
	publications {
		mavenJava( MavenPublication ) {
			from components.java
		}
	}
	repositories {
		maven {
			url 'http://repo.enonic.net/artifactory/public'
		}
	}
}*/
